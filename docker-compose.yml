version: '3.8'

services:
  web:
    build: 
      context: .
      target: production
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://mongodb:27017/flaskapi
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
    depends_on:
      mongodb:
        condition: service_healthy
      jaeger:
        condition: service_started
    networks:
      - app-network

  mongodb:
    image: mongo:4.4
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongodb://localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  jaeger:
    image: jaegertracing/all-in-one:1.25
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    networks:
      - app-network

  test:
    build: 
      context: .
      target: development
    command: pytest test_app.py -v
    environment:
      - MONGO_URI=mongodb://mongodb:27017/testdb
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
    depends_on:
      mongodb:
        condition: service_healthy
      jaeger:
        condition: service_started
    networks:
      - app-network

  bdd-test:
    build: 
      context: .
      target: development
    command: behave
    environment:
      - MONGO_URI=mongodb://mongodb:27017/testdb
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
    depends_on:
      mongodb:
        condition: service_healthy
      jaeger:
        condition: service_started
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data: